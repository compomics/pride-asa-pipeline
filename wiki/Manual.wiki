#labels Featured
#How to use the pipeline

== Overview == 
For a given experiment, identifications and spectra are retrieved from the PRIDE public MySQL database and processed into three categories, with `Δm` the mass difference between the experimental and theoretical precursor mass:
  * _unmodified_: `Δm` is smaller than the mass error
  * _modified_: `Δm` is significant but can’t be explained by a modification combination   
  * _unexplained_: `Δm` can be fitted to a combination of modification masses, so the precursor carries likely one or more PTMs. 
The peptide sequences are then matched to the corresponding spectra after adaptive noise filtering, and a score is derived for each peptide-to-spectrum match. The final output of the tool consists of the complete list of annotated identifications and spectra, and the list of modifications used to explain the observed precursor mass deviations in that experiment.

== Configuration ==
The pipeline configuration files can be found in the resources folder. These files can be edited by the user if necessary. If no files are found in the resources folder, default values will be used instead. Note that the pipeline can be configured in GUI (_Edit_ -> _Configuration_) mode as well. 

=== pride_asa_pipeline.properties ===
Most of the parameter values in this file should be left to their default values. The settings that the user might need the change are listed below
  * `spectrumannotator.include_pride_modifications`: include the modifications in found in PRIDE for a given experiment. Note that setting this parameter to `true` can increase the processing time. The [#modifications.xml modifications] defined in the pipeline are always taken into account.
  * `results_path`: the path on the file system where the pipeline result files will be stored.
  * `modification.use_monoisotopic_mass`: use the monoisotopic or the average mass for the PTMs.
  * `pipeline.considered_charge_states`: the considered charge states for a precursor.
  * `massrecalibrator.maximum_systematic_mass_error`: the threshold systematic mass error value. The systematic mass errors (per charge state) as result of a recalibration step are checked against this value.  

=== modifications.xml ===
This XML file contains the modifications used to explain a possible difference between the experimental and theorecical precursor mass. It can be edited or replaced (_Edit_ -> _Modifications_ in GUI mode) by a modifications result file. The accompanying XML schema can be found in the [http://code.google.com/p/pride-asa-pipeline/downloads/list downloads] section. 

As mentioned before, this fixed set of pipeline modifications can be complemented with modifications found in PRIDE for the experiment of interest. In GUI mode, a dialog is shown if one or more PRIDE modifications have a similar mass compared to the pipeline PTMs. The user can then decide wether or not to include these _conflicting modifications_.

== Output ==
The pipeline produces two result files. The first one (_<experiment accession>_.txt) contains the fragment ion annotations for each identified spectrum. The second one (_<experiment accession>_`_`mods.txt) contains the subset of modifications that could actually explain a precursor mass deviation. These files can be imported into the gui for further analysis.

== Command line mode ==
Execute the following command in the folder where the pipeline .jar file is located:
{{{
java -jar pride-asa-pipeline-<version>.jar [-a <accession> | -f <experiment_accessions_file_path>]
}}}
Using argument `-a` followed by a PRIDE experiment accession annotates one experiment whereas `-f` followed by the path of a _.txt_ file containing one or more experiment accessions (line separated) annotates multiple experiments sequentially.

== GUI mode ==
Run the pipeline in GUI mode by double clicking the _.jar_ file. On the main panel, an experiment can be selected out of the publicly available PRIDE experiments. If the experiment contains no useful identifications, a message is shown. While processing a given experiment, two dialogs might pop up:
  *